name: Setup EKS Cluster and Deploy Sock Shop
on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
      - 'k8s-manifests/**'

env:
  AWS_REGION: ${{ secrets.AWS_REGION}}
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  TF_WORKING_DIR: ./terraform

jobs:
  setup-eks-cluster:
    if: github.event.commits.*.modified == './terraform/**'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Create terraform.tfvars file
      run: |
        echo "${{ secrets.TERRAFORMTFVARS }}" > ${{ env.TF_WORKING_DIR }}/terraform.tfvars

    - name: Initialize Terraform
      id: init
      run: terraform init

    - name: Initialize Terraform
      id: fmt
      run: terraform fmt

    - name: Validate Terraform Code
      id: validate
      run: terraform validate

    - name: Plan Terraform
      id: plan
      run: terraform plan

    - name: Apply Terraform
      id: apply
      run: terraform apply -auto-approve

  deploy-sockshop:
    if: github.event.commits.*.modified == './k8s-manifests/**'
    runs-on: ubuntu-latest
    needs: setup-eks-cluster

    steps:
    - name: Install kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.30.0'
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up kubectl using awscli
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ secrets.CLUSTER_NAME }}

    - name: Deploy Sock Shop Microservices
      run: |
        kubectl apply -f ./k8s-manifests

    - name: Verify Deployment
      run: |
        kubectl get pods --all-namespaces
